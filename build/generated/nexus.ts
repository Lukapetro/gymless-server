/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ReferralWhereUniqueInput: { // input type
    id?: number | null; // Int
    referredId?: number | null; // Int
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: number | null; // Int
  }
  UsersOnWorkoutsWhereUniqueInput: { // input type
    workoutId_userId?: NexusGenInputs['WorkoutIdUserIdCompoundUniqueInput'] | null; // WorkoutIdUserIdCompoundUniqueInput
  }
  WorkoutIdUserIdCompoundUniqueInput: { // input type
    userId: number; // Int!
    workoutId: number; // Int!
  }
  WorkoutWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
  Gymler: "basic" | "early"
  Role: "admin" | "trainer" | "user"
  Sex: "female" | "male" | "unknown"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Card: { // root type
    brand: string; // String!
  }
  Cordinates: { // root type
    address?: string | null; // String
    city?: string | null; // String
    id: number; // Int!
    latitude?: number | null; // Float
    longitude?: number | null; // Float
  }
  Mutation: {};
  PaymentMethods: {};
  Query: {};
  Referral: { // root type
    completed: boolean; // Boolean!
    createdAt: any; // DateTime!
    id: number; // Int!
    referredId: number; // Int!
    referrerId: number; // Int!
    updatedAt: any; // DateTime!
  }
  User: { // root type
    avatarId?: string | null; // String
    bio?: string | null; // String
    birthDate?: any | null; // DateTime
    classes: number; // Int!
    confirmed: boolean; // Boolean!
    customerId?: string | null; // String
    email: string; // String!
    facebookId?: string | null; // String
    gymlerType: NexusGenEnums['Gymler']; // Gymler!
    id: number; // Int!
    lastLoggedIn?: any | null; // DateTime
    name: string; // String!
    role: NexusGenEnums['Role']; // Role!
    sex: NexusGenEnums['Sex']; // Sex!
    stripeId?: string | null; // String
    surname?: string | null; // String
  }
  UsersOnWorkouts: { // root type
    attended: boolean; // Boolean!
  }
  Workout: { // root type
    date?: any | null; // DateTime
    description?: string | null; // String
    duration: number; // Int!
    id: number; // Int!
    spots: number; // Int!
    title: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
  DateTime: any;
  JSON: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ReferralWhereUniqueInput: NexusGenInputs['ReferralWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  UsersOnWorkoutsWhereUniqueInput: NexusGenInputs['UsersOnWorkoutsWhereUniqueInput'];
  WorkoutIdUserIdCompoundUniqueInput: NexusGenInputs['WorkoutIdUserIdCompoundUniqueInput'];
  WorkoutWhereUniqueInput: NexusGenInputs['WorkoutWhereUniqueInput'];
  Gymler: NexusGenEnums['Gymler'];
  Role: NexusGenEnums['Role'];
  Sex: NexusGenEnums['Sex'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Card: { // field return type
    brand: string; // String!
  }
  Cordinates: { // field return type
    address: string | null; // String
    city: string | null; // String
    id: number; // Int!
    latitude: number | null; // Float
    longitude: number | null; // Float
    workout: NexusGenRootTypes['Workout'][]; // [Workout!]!
  }
  Mutation: { // field return type
    bookClass: NexusGenRootTypes['Workout']; // Workout!
    changePassword: NexusGenRootTypes['User']; // User!
    confirmUser: boolean; // Boolean!
    createWorkout: NexusGenRootTypes['Workout']; // Workout!
    deleteBooking: NexusGenRootTypes['Workout']; // Workout!
    deleteUser: NexusGenRootTypes['User']; // User!
    detachPaymentMethod: any; // JSON!
    facebookConnect: NexusGenRootTypes['User']; // User!
    facebookDisconnect: NexusGenRootTypes['User']; // User!
    facebookLogin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    forgotPassword: boolean; // Boolean!
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    paymentIntent: any; // JSON!
    sendHelpRequest: boolean; // Boolean!
    setupIntent: string; // String!
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    trainerLogin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    updateAvatar: NexusGenRootTypes['User']; // User!
    updateUser: NexusGenRootTypes['User']; // User!
    updateUserClasses: NexusGenRootTypes['User']; // User!
    updateUserPassword: NexusGenRootTypes['User']; // User!
  }
  PaymentMethods: { // field return type
    data: NexusGenRootTypes['Card'][]; // [Card!]!
  }
  Query: { // field return type
    futureWorkouts: NexusGenRootTypes['Workout'][]; // [Workout!]!
    me: NexusGenRootTypes['User']; // User!
    pastWorkouts: NexusGenRootTypes['Workout'][]; // [Workout!]!
    paymentMethods: any; // JSON!
    userAvailableWorkouts: NexusGenRootTypes['Workout'][]; // [Workout!]!
    workoutsBooked: NexusGenRootTypes['Workout'][]; // [Workout!]!
  }
  Referral: { // field return type
    completed: boolean; // Boolean!
    createdAt: any; // DateTime!
    id: number; // Int!
    referred: NexusGenRootTypes['User']; // User!
    referredId: number; // Int!
    referrer: NexusGenRootTypes['User']; // User!
    referrerId: number; // Int!
    updatedAt: any; // DateTime!
  }
  User: { // field return type
    avatarId: string | null; // String
    bio: string | null; // String
    birthDate: any | null; // DateTime
    classes: number; // Int!
    confirmed: boolean; // Boolean!
    customerId: string | null; // String
    email: string; // String!
    facebookId: string | null; // String
    gymlerType: NexusGenEnums['Gymler']; // Gymler!
    gymless: NexusGenRootTypes['UsersOnWorkouts'][]; // [UsersOnWorkouts!]!
    id: number; // Int!
    lastLoggedIn: any | null; // DateTime
    name: string; // String!
    referral: NexusGenRootTypes['Referral'][]; // [Referral!]!
    referrer: NexusGenRootTypes['Referral'][]; // [Referral!]!
    role: NexusGenEnums['Role']; // Role!
    sex: NexusGenEnums['Sex']; // Sex!
    stripeId: string | null; // String
    surname: string | null; // String
    workouts: NexusGenRootTypes['Workout'][]; // [Workout!]!
  }
  UsersOnWorkouts: { // field return type
    attended: boolean; // Boolean!
  }
  Workout: { // field return type
    cordinates: NexusGenRootTypes['Cordinates']; // Cordinates!
    date: any | null; // DateTime
    description: string | null; // String
    duration: number; // Int!
    id: number; // Int!
    partecipants: NexusGenRootTypes['User'][]; // [User!]!
    spots: number; // Int!
    title: string; // String!
    trainer: NexusGenRootTypes['User']; // User!
    users: NexusGenRootTypes['UsersOnWorkouts'][]; // [UsersOnWorkouts!]!
  }
}

export interface NexusGenArgTypes {
  Cordinates: {
    workout: { // args
      after?: NexusGenInputs['WorkoutWhereUniqueInput'] | null; // WorkoutWhereUniqueInput
      before?: NexusGenInputs['WorkoutWhereUniqueInput'] | null; // WorkoutWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    bookClass: { // args
      id: number; // Int!
    }
    changePassword: { // args
      password: string; // String!
      token: string; // String!
    }
    confirmUser: { // args
      token: string; // String!
    }
    createWorkout: { // args
      cordinatesId?: number | null; // Int
      date?: any | null; // DateTime
      description?: string | null; // String
      duration: number; // Int!
      spots: number; // Int!
      title: string; // String!
    }
    deleteBooking: { // args
      id?: string | null; // ID
    }
    detachPaymentMethod: { // args
      id: string; // String!
    }
    facebookConnect: { // args
      fbToken: string; // String!
    }
    facebookLogin: { // args
      fbToken: string; // String!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    paymentIntent: { // args
      amount: number; // Int!
    }
    sendHelpRequest: { // args
      message?: string | null; // String
    }
    signup: { // args
      birthDate?: any | null; // Date
      email: string; // String!
      name: string; // String!
      password: string; // String!
      referrerId?: number | null; // Int
      surname: string; // String!
    }
    trainerLogin: { // args
      email: string; // String!
      password: string; // String!
    }
    updateAvatar: { // args
      avatarId?: string | null; // String
    }
    updateUser: { // args
      birthDate?: any | null; // Date
      email?: string | null; // String
      name?: string | null; // String
      sex?: NexusGenEnums['Sex'] | null; // Sex
      surname?: string | null; // String
    }
    updateUserClasses: { // args
      classes: number; // Int!
    }
    updateUserPassword: { // args
      newPassword?: string | null; // String
      oldPassword?: string | null; // String
    }
  }
  Query: {
    userAvailableWorkouts: { // args
      endDate?: any | null; // DateTime
      startDate?: any | null; // DateTime
    }
  }
  User: {
    gymless: { // args
      after?: NexusGenInputs['UsersOnWorkoutsWhereUniqueInput'] | null; // UsersOnWorkoutsWhereUniqueInput
      before?: NexusGenInputs['UsersOnWorkoutsWhereUniqueInput'] | null; // UsersOnWorkoutsWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    referral: { // args
      after?: NexusGenInputs['ReferralWhereUniqueInput'] | null; // ReferralWhereUniqueInput
      before?: NexusGenInputs['ReferralWhereUniqueInput'] | null; // ReferralWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    referrer: { // args
      after?: NexusGenInputs['ReferralWhereUniqueInput'] | null; // ReferralWhereUniqueInput
      before?: NexusGenInputs['ReferralWhereUniqueInput'] | null; // ReferralWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    workouts: { // args
      after?: NexusGenInputs['WorkoutWhereUniqueInput'] | null; // WorkoutWhereUniqueInput
      before?: NexusGenInputs['WorkoutWhereUniqueInput'] | null; // WorkoutWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Workout: {
    partecipants: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    users: { // args
      after?: NexusGenInputs['UsersOnWorkoutsWhereUniqueInput'] | null; // UsersOnWorkoutsWhereUniqueInput
      before?: NexusGenInputs['UsersOnWorkoutsWhereUniqueInput'] | null; // UsersOnWorkoutsWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Card" | "Cordinates" | "Mutation" | "PaymentMethods" | "Query" | "Referral" | "User" | "UsersOnWorkouts" | "Workout";

export type NexusGenInputNames = "ReferralWhereUniqueInput" | "UserWhereUniqueInput" | "UsersOnWorkoutsWhereUniqueInput" | "WorkoutIdUserIdCompoundUniqueInput" | "WorkoutWhereUniqueInput";

export type NexusGenEnumNames = "Gymler" | "Role" | "Sex";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "DateTime" | "Float" | "ID" | "Int" | "JSON" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}